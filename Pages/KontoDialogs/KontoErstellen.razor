@page "/konten/neu"
@using System.ComponentModel.DataAnnotations
@using monexa.Models
@using monexa.Models.Enums

<PageTitle>Neues Konto erstellen</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4 mb-8">
    <!-- Header mit Zurück-Button -->
    <MudPaper Class="pa-4 mb-4" Elevation="0">
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
            <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" 
                           Color="Color.Default" 
                           Href="konten"
                           Title="Zurück zur Übersicht"/>
            <MudText Typo="Typo.h5">Neues Konto erstellen</MudText>
        </MudStack>
    </MudPaper>

    <!-- Formular -->
    <MudPaper Class="pa-6" Elevation="2">
        <MudForm @ref="form" @bind-IsValid="formValid">
            <MudGrid Spacing="3">
                <!-- Allgemeine Informationen -->
                <MudItem xs="12">
                    <MudText Typo="Typo.h6" Class="mb-2">Allgemeine Informationen</MudText>
                    <MudDivider />
                </MudItem>

                <MudItem xs="12">
                    <MudTextField @bind-Value="account.Name" 
                                  Label="Kontoname" 
                                  Required="true"
                                  RequiredError="Kontoname ist erforderlich"
                                  Variant="Variant.Outlined"
                                  HelperText="Geben Sie einen aussagekräftigen Namen ein"/>
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudSelect @bind-Value="account.Type" 
                               Label="Kontotyp" 
                               Required="true"
                               Variant="Variant.Outlined"
                               AnchorOrigin="Origin.BottomCenter">
                        @foreach (AccountType type in Enum.GetValues(typeof(AccountType)))
                        {
                            <MudSelectItem Value="@type">
                                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                                    <MudIcon Icon="@GetAccountTypeIcon(type)" Size="Size.Small" />
                                    <MudText>@GetAccountTypeText(type)</MudText>
                                </MudStack>
                            </MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudSwitch T="bool" @bind-Checked="account.IsActive" 
                               Label="Konto ist aktiv" 
                               Color="Color.Success"
                               Class="mt-2"/>
                </MudItem>

                <!-- Bankinformationen -->
                <MudItem xs="12" Class="mt-4">
                    <MudText Typo="Typo.h6" Class="mb-2">Bankinformationen</MudText>
                    <MudDivider />
                </MudItem>

                <MudItem xs="12">
                    <MudTextField @bind-Value="account.BankName" 
                                  Label="Bank" 
                                  Required="true"
                                  RequiredError="Bank ist erforderlich"
                                  Variant="Variant.Outlined"
                                  Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.AccountBalance"/>
                </MudItem>

                <MudItem xs="12">
                    <MudTextField @bind-Value="account.IBAN" 
                                  Label="IBAN" 
                                  Variant="Variant.Outlined"
                                  Mask="@ibanMask"
                                  HelperText="Optional: Internationale Bankkontonummer"
                                  Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.CreditCard"/>
                </MudItem>

                <!-- Finanzinformationen -->
                <MudItem xs="12" Class="mt-4">
                    <MudText Typo="Typo.h6" Class="mb-2">Finanzinformationen</MudText>
                    <MudDivider />
                </MudItem>

                <MudItem xs="12" md="8">
                    <MudNumericField @bind-Value="account.Balance" 
                                     Label="Aktueller Kontostand" 
                                     Format="N2"
                                     Variant="Variant.Outlined"
                                     Adornment="Adornment.Start"
                                     AdornmentText="€"
                                     HelperText="Geben Sie den aktuellen Kontostand ein"/>
                </MudItem>

                <MudItem xs="12" md="4">
                    <MudSelect @bind-Value="account.Currency" 
                               Label="Währung" 
                               Required="true"
                               Variant="Variant.Outlined">
                        <MudSelectItem Value="@("EUR")">EUR (€)</MudSelectItem>
                        <MudSelectItem Value="@("USD")">USD ($)</MudSelectItem>
                        <MudSelectItem Value="@("GBP")">GBP (£)</MudSelectItem>
                        <MudSelectItem Value="@("CHF")">CHF (Fr.)</MudSelectItem>
                    </MudSelect>
                </MudItem>

                <!-- Zusätzliche Informationen -->
                <MudItem xs="12" Class="mt-4">
                    <MudText Typo="Typo.h6" Class="mb-2">Zusätzliche Informationen</MudText>
                    <MudDivider />
                </MudItem>

                <MudItem xs="12">
                    <MudTextField @bind-Value="account.Description" 
                                  Label="Beschreibung" 
                                  Lines="4"
                                  Variant="Variant.Outlined"
                                  HelperText="Optional: Notizen oder zusätzliche Informationen zu diesem Konto"/>
                </MudItem>

                <!-- Zusammenfassung Card -->
                <MudItem xs="12" Class="mt-4">
                    <MudAlert Severity="Severity.Info" Variant="Variant.Outlined">
                        <MudText Typo="Typo.body2">
                            <strong>Hinweis:</strong> Nach dem Erstellen können Sie Transaktionen für dieses Konto erfassen und die Entwicklung Ihres Kontostands verfolgen.
                        </MudText>
                    </MudAlert>
                </MudItem>
            </MudGrid>
        </MudForm>
    </MudPaper>

    <!-- Action Buttons - Fixed am unteren Rand für mobile -->
    <MudPaper Class="pa-4 mt-4" Elevation="4" Style="position: sticky; bottom: 0; z-index: 10;">
        <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
            <MudButton Variant="Variant.Outlined" 
                       Color="Color.Default"
                       StartIcon="@Icons.Material.Filled.Cancel"
                       Href="konten">
                Abbrechen
            </MudButton>
            <MudButton Variant="Variant.Filled" 
                       Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.Save"
                       OnClick="SaveAccount"
                       Disabled="@(!formValid)">
                Konto erstellen
            </MudButton>
        </MudStack>
    </MudPaper>
</MudContainer>

@code {
    private Konto account = new() { IsActive = true, Currency = "EUR", Balance = 0 };
    private MudForm form;
    private bool formValid;
    
    // IBAN Maske für bessere Eingabe
    private IMask ibanMask = new PatternMask("AA## #### #### #### #### ##")
    {
        MaskChars = new[] { new MaskChar('A', @"[A-Za-z]"), new MaskChar('#', @"[0-9]") },
        CleanDelimiters = true,
        Transformation = AllUpperCase
    };

    private static char AllUpperCase(char c) => c.ToString().ToUpperInvariant()[0];

    private void SaveAccount()
    {
        if (formValid)
        {
            // Hier würde die API-Call zum Speichern erfolgen
            // await AccountService.CreateAsync(account);
            
            // Navigation zurück zur Übersicht
            // NavigationManager.NavigateTo("/konten");
            
            // Für Demo: Nur Log
            Console.WriteLine($"Neues Konto erstellt: {account.Name}");
        }
    }

    private string GetAccountTypeIcon(AccountType type)
    {
        return type switch
        {
            AccountType.Girokonto => Icons.Material.Filled.AccountBalance,
            AccountType.Sparkonto => Icons.Material.Filled.Savings,
            AccountType.Tagesgeld => Icons.Material.Filled.TrendingUp,
            AccountType.Kreditkarte => Icons.Material.Filled.CreditCard,
            AccountType.Depot => Icons.Material.Filled.ShowChart,
            _ => Icons.Material.Filled.AccountBalanceWallet
        };
    }

    private string GetAccountTypeText(AccountType type)
    {
        return type switch
        {
            AccountType.Girokonto => "Girokonto",
            AccountType.Sparkonto => "Sparkonto",
            AccountType.Tagesgeld => "Tagesgeldkonto",
            AccountType.Kreditkarte => "Kreditkarte",
            AccountType.Depot => "Depot",
            _ => type.ToString()
        };
    }
    
}